package Account.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AbstractAccountConditions = 0;
  public static final int AccountLifeCycleStatus = 1;
  public static final int AccountManagementRules = 2;
  public static final int AggregateAccountList = 3;
  public static final int Entities = 4;
  public static final int Has = 5;
  public static final int Term = 6;
  public static final int Then = 7;
  public static final int When = 8;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x1b5f79a9a6464e86L, 0xb0dcaa13ea6dc8d2L);
    builder.put(0x1e60c5d7fc1f29b8L, AbstractAccountConditions);
    builder.put(0x1e60c5d7fc1f2e0eL, AccountLifeCycleStatus);
    builder.put(0x1e60c5d7fc1e4f16L, AccountManagementRules);
    builder.put(0x1e60c5d7fc1e5166L, AggregateAccountList);
    builder.put(0x1e60c5d7fc210ae7L, Entities);
    builder.put(0x1e60c5d7fc210ae4L, Has);
    builder.put(0x1e60c5d7fc210b53L, Term);
    builder.put(0x1e60c5d7fc224f14L, Then);
    builder.put(0x1e60c5d7fc1fb6e3L, When);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}

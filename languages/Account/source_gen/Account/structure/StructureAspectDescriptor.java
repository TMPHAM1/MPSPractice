package Account.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAbstractAccountConditions = createDescriptorForAbstractAccountConditions();
  /*package*/ final ConceptDescriptor myConceptAccountLifeCycleStatus = createDescriptorForAccountLifeCycleStatus();
  /*package*/ final ConceptDescriptor myConceptAccountManagementRules = createDescriptorForAccountManagementRules();
  /*package*/ final ConceptDescriptor myConceptAggregateAccountList = createDescriptorForAggregateAccountList();
  /*package*/ final ConceptDescriptor myConceptEntities = createDescriptorForEntities();
  /*package*/ final ConceptDescriptor myConceptHas = createDescriptorForHas();
  /*package*/ final ConceptDescriptor myConceptTerm = createDescriptorForTerm();
  /*package*/ final ConceptDescriptor myConceptThen = createDescriptorForThen();
  /*package*/ final ConceptDescriptor myConceptWhen = createDescriptorForWhen();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractAccountConditions, myConceptAccountLifeCycleStatus, myConceptAccountManagementRules, myConceptAggregateAccountList, myConceptEntities, myConceptHas, myConceptTerm, myConceptThen, myConceptWhen);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AbstractAccountConditions:
        return myConceptAbstractAccountConditions;
      case LanguageConceptSwitch.AccountLifeCycleStatus:
        return myConceptAccountLifeCycleStatus;
      case LanguageConceptSwitch.AccountManagementRules:
        return myConceptAccountManagementRules;
      case LanguageConceptSwitch.AggregateAccountList:
        return myConceptAggregateAccountList;
      case LanguageConceptSwitch.Entities:
        return myConceptEntities;
      case LanguageConceptSwitch.Has:
        return myConceptHas;
      case LanguageConceptSwitch.Term:
        return myConceptTerm;
      case LanguageConceptSwitch.Then:
        return myConceptThen;
      case LanguageConceptSwitch.When:
        return myConceptWhen;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAbstractAccountConditions() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Account", "AbstractAccountConditions", 0x1b5f79a9a6464e86L, 0xb0dcaa13ea6dc8d2L, 0x1e60c5d7fc1f29b8L);
    b.class_(false, false, false);
    b.origin("r:38998900-57ad-4c8d-8c09-fb9bd5f059c5(Account.structure)/2188966950340602296");
    b.version(2);
    b.aggregate("abstractAccountConditions", 0x1e60c5d7fc242f0dL).target(0x1b5f79a9a6464e86L, 0xb0dcaa13ea6dc8d2L, 0x1e60c5d7fc1f29b8L).optional(true).ordered(true).multiple(false).origin("2188966950340931341").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAccountLifeCycleStatus() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Account", "AccountLifeCycleStatus", 0x1b5f79a9a6464e86L, 0xb0dcaa13ea6dc8d2L, 0x1e60c5d7fc1f2e0eL);
    b.class_(false, false, false);
    b.super_("Account.structure.Entities", 0x1b5f79a9a6464e86L, 0xb0dcaa13ea6dc8d2L, 0x1e60c5d7fc210ae7L);
    b.origin("r:38998900-57ad-4c8d-8c09-fb9bd5f059c5(Account.structure)/2188966950340603406");
    b.version(2);
    b.property("status", 0x1e60c5d7fc1f2e48L).type(PrimitiveTypeId.BOOLEAN).origin("2188966950340603464").done();
    b.property("effective_start_date", 0x1e60c5d7fc254737L).type(PrimitiveTypeId.STRING).origin("2188966950341003063").done();
    b.property("reason", 0x1e60c5d7fc25473aL).type(PrimitiveTypeId.STRING).origin("2188966950341003066").done();
    b.alias("Account Life Cycle");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAccountManagementRules() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Account", "AccountManagementRules", 0x1b5f79a9a6464e86L, 0xb0dcaa13ea6dc8d2L, 0x1e60c5d7fc1e4f16L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:38998900-57ad-4c8d-8c09-fb9bd5f059c5(Account.structure)/2188966950340546326");
    b.version(2);
    b.aggregate("whenInstance", 0x1e60c5d7fc1e5164L).target(0x1b5f79a9a6464e86L, 0xb0dcaa13ea6dc8d2L, 0x1e60c5d7fc1fb6e3L).optional(true).ordered(true).multiple(true).origin("2188966950340546916").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAggregateAccountList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Account", "AggregateAccountList", 0x1b5f79a9a6464e86L, 0xb0dcaa13ea6dc8d2L, 0x1e60c5d7fc1e5166L);
    b.class_(false, false, false);
    b.super_("Account.structure.AbstractAccountConditions", 0x1b5f79a9a6464e86L, 0xb0dcaa13ea6dc8d2L, 0x1e60c5d7fc1f29b8L);
    b.origin("r:38998900-57ad-4c8d-8c09-fb9bd5f059c5(Account.structure)/2188966950340546918");
    b.version(2);
    b.aggregate("aggregateAccountRules", 0x1e60c5d7fc1f29bbL).target(0x1b5f79a9a6464e86L, 0xb0dcaa13ea6dc8d2L, 0x1e60c5d7fc1f29b8L).optional(true).ordered(true).multiple(true).origin("2188966950340602299").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEntities() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Account", "Entities", 0x1b5f79a9a6464e86L, 0xb0dcaa13ea6dc8d2L, 0x1e60c5d7fc210ae7L);
    b.class_(false, false, false);
    b.origin("r:38998900-57ad-4c8d-8c09-fb9bd5f059c5(Account.structure)/2188966950340725479");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHas() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Account", "Has", 0x1b5f79a9a6464e86L, 0xb0dcaa13ea6dc8d2L, 0x1e60c5d7fc210ae4L);
    b.class_(false, false, false);
    b.super_("Account.structure.AbstractAccountConditions", 0x1b5f79a9a6464e86L, 0xb0dcaa13ea6dc8d2L, 0x1e60c5d7fc1f29b8L);
    b.origin("r:38998900-57ad-4c8d-8c09-fb9bd5f059c5(Account.structure)/2188966950340725476");
    b.version(2);
    b.aggregate("enitities", 0x1e60c5d7fc210ae5L).target(0x1b5f79a9a6464e86L, 0xb0dcaa13ea6dc8d2L, 0x1e60c5d7fc210ae7L).optional(true).ordered(true).multiple(true).origin("2188966950340725477").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTerm() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Account", "Term", 0x1b5f79a9a6464e86L, 0xb0dcaa13ea6dc8d2L, 0x1e60c5d7fc210b53L);
    b.class_(false, false, false);
    b.super_("Account.structure.Entities", 0x1b5f79a9a6464e86L, 0xb0dcaa13ea6dc8d2L, 0x1e60c5d7fc210ae7L);
    b.origin("r:38998900-57ad-4c8d-8c09-fb9bd5f059c5(Account.structure)/2188966950340725587");
    b.version(2);
    b.property("term_name", 0x1e60c5d7fc210b54L).type(PrimitiveTypeId.STRING).origin("2188966950340725588").done();
    b.property("term_type", 0x1e60c5d7fc210b56L).type(PrimitiveTypeId.STRING).origin("2188966950340725590").done();
    b.property("term_id", 0x1e60c5d7fc210b59L).type(PrimitiveTypeId.STRING).origin("2188966950340725593").done();
    b.property("calculation_method", 0x1e60c5d7fc210b5dL).type(PrimitiveTypeId.STRING).origin("2188966950340725597").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForThen() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Account", "Then", 0x1b5f79a9a6464e86L, 0xb0dcaa13ea6dc8d2L, 0x1e60c5d7fc224f14L);
    b.class_(false, false, false);
    b.origin("r:38998900-57ad-4c8d-8c09-fb9bd5f059c5(Account.structure)/2188966950340808468");
    b.version(2);
    b.aggregate("aggregateAccountConcepts", 0x1e60c5d7fc224f15L).target(0x1b5f79a9a6464e86L, 0xb0dcaa13ea6dc8d2L, 0x1e60c5d7fc1e5166L).optional(false).ordered(true).multiple(false).origin("2188966950340808469").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWhen() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Account", "When", 0x1b5f79a9a6464e86L, 0xb0dcaa13ea6dc8d2L, 0x1e60c5d7fc1fb6e3L);
    b.class_(false, false, false);
    b.origin("r:38998900-57ad-4c8d-8c09-fb9bd5f059c5(Account.structure)/2188966950340638435");
    b.version(2);
    b.aggregate("aggregateAccountConcepts", 0x1e60c5d7fc1fb6e4L).target(0x1b5f79a9a6464e86L, 0xb0dcaa13ea6dc8d2L, 0x1e60c5d7fc1f29b8L).optional(true).ordered(true).multiple(true).origin("2188966950340638436").done();
    b.aggregate("thenConcept", 0x1e60c5d7fc224edbL).target(0x1b5f79a9a6464e86L, 0xb0dcaa13ea6dc8d2L, 0x1e60c5d7fc224f14L).optional(false).ordered(true).multiple(false).origin("2188966950340808411").done();
    return b.create();
  }
}
